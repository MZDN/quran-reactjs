[{"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/reportWebVitals.js":"1","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/App.js":"2","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/index.js":"3","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Header.js":"4","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Footer.js":"5","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/ApiClient.js":"6","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/SurahCard.js":"7","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Pagination.js":"8","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/history.js":"9","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/routes/Route.js":"10","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/routes/index.js":"11","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/SurahList.js":"12","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/page/SurahPage.js":"13","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/page/QuranSlider.js":"14"},{"size":362,"mtime":1606398499000,"results":"15","hashOfConfig":"16"},{"size":254,"mtime":1607116213000,"results":"17","hashOfConfig":"16"},{"size":712,"mtime":1607264352000,"results":"18","hashOfConfig":"16"},{"size":682,"mtime":1606581263000,"results":"19","hashOfConfig":"16"},{"size":383,"mtime":1606826588000,"results":"20","hashOfConfig":"16"},{"size":104,"mtime":1606474908000,"results":"21","hashOfConfig":"16"},{"size":2876,"mtime":1607328298000,"results":"22","hashOfConfig":"16"},{"size":5723,"mtime":1606573326000,"results":"23","hashOfConfig":"16"},{"size":111,"mtime":1607091013000,"results":"24","hashOfConfig":"16"},{"size":969,"mtime":1607092413000,"results":"25","hashOfConfig":"16"},{"size":885,"mtime":1607171478000,"results":"26","hashOfConfig":"16"},{"size":3139,"mtime":1607328466000,"results":"27","hashOfConfig":"16"},{"size":2829,"mtime":1607328705000,"results":"28","hashOfConfig":"16"},{"size":1505,"mtime":1607284967000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hdgayz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/reportWebVitals.js",[],["65","66"],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/App.js",[],["67","68"],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/index.js",[],["69","70"],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Header.js",[],["71","72"],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Footer.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/ApiClient.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/SurahCard.js",["73","74"],"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GoLocation } from 'react-icons/go';\nimport { AiOutlineFieldNumber, AiOutlineNumber } from 'react-icons/ai';\n\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\n\nclass SurahCard extends Component {\n  constructor(props) {\n    super(props);\n      const {\n        aptId = null, ayahs = null, name = null, englishName = null, englishNameTranslation = null, number = null, revelationType = null\n      } = props.surah;\n    this.aptId = aptId;\n    this.name=name;\n    this.englishName=englishName;\n    this.englishNameTranslation=englishNameTranslation;\n    this.revelationType=revelationType;\n    this.number=number;\n    this.ayahs=ayahs;\n\n  }\n  handleClick = evt => {\n    evt.preventDefault();\n    console.log('Click happened');\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    \n    return (\n      <Link to={\"/surah/\"+this.number} className=\"col-sm-6 col-md-4 surah-card\">\n      <div  key={this.aptId}>\n        <div className=\"surah-card-container border-gray rounded border mx-2 my-3 d-flex flex-row align-items-center p-0 bg-light\">\n          \n            <div className=\"h-100 position-relative border-gray border-right px-2 bg-white rounded-left\">\n           \n            <img src={'https://assets-1f14.kxcdn.com/images/' +  (this.number).toString().padStart(3, '0')+ '.svg'} className=\"img-rounded\" width=\"100\" height=\"50\" />\n           \n            </div>\n          \n         \n          <div className=\"px-3\">\n            <span className=\"surah-region text-secondary text-uppercase\"><AiOutlineFieldNumber />{this.number} {this.englishName}</span>\n            <span className=\"surah-name text-dark d-block\">{this.englishNameTranslation}</span>\n            <span className=\"surah-name text-dark text-secondary text-lowercase small\"><AiOutlineNumber />ayah:{this.ayahs.length} / <GoLocation />{this.revelationType === 'Meccan' ? 'Mecca' : 'Medina'}</span>\n          </div>\n        </div>\n      </div>\n      </Link>\n\n    );\n  }\n}\n\nSurahCard.propTypes = {\n  surah: PropTypes.shape({\n    aptId: PropTypes.number.isRequired,\n    number: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    englishName: PropTypes.string.isRequired,\n    englishNameTranslation: PropTypes.string.isRequired,\n    revelationType: PropTypes.string.isRequired,\n    ayahs: PropTypes.arrayOf({\n      hizbQuarter: PropTypes.number.isRequired,\n      juz: PropTypes.number.isRequired,\n      manzil: PropTypes.number.isRequired,\n      number: PropTypes.number.isRequired,\n      numberInSurah: PropTypes.number.isRequired,\n      page: PropTypes.number.isRequired,\n      ruku: PropTypes.number.isRequired,\n      sajda: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired,\n    onSurahPageChanged:PropTypes.func\n  }).isRequired\n};\n\nexport default SurahCard;","/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/Pagination.js",["75","76","77"],"//https://raw.githubusercontent.com/do-community/build-react-pagination-demo/master/src/components/Pagination.js\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n}\n\nclass Pagination extends Component {\n\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours = typeof pageNeighbours === 'number'\n      ? Math.max(0, Math.min(pageNeighbours, 2))\n      : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  }\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  }\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n  }\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n  }\n\n  /**\n   * Let's say we have 10 pages and we set pageNeighbours to 2\n   * Given that the current page is 6\n   * The pagination control will look like the following:\n   *\n   * (1) < {4 5} [6] {7 8} > (10)\n   *\n   * (x) => terminal pages: first and last page(always visible)\n   * [x] => represents current page\n   * {...x} => represents page neighbours\n   */\n  fetchPageNumbers = () => {\n\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = (totalPages - endPage) > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case (hasLeftSpill && !hasRightSpill): {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case (!hasLeftSpill && hasRightSpill): {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case (hasLeftSpill && hasRightSpill):\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n\n    }\n\n    return range(1, totalPages);\n\n  }\n\n  render() {\n\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Quran Pagination\">\n          <ul className=\"pagination\">\n            { pages.map((page, index) => {\n\n              if (page === LEFT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                    <span aria-hidden=\"true\">&laquo;</span>\n                    <span className=\"sr-only\">Previous</span>\n                  </a>\n                </li>\n              );\n\n              if (page === RIGHT_PAGE) return (\n                <li key={index} className=\"page-item\">\n                  <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                    <span aria-hidden=\"true\">&raquo;</span>\n                    <span className=\"sr-only\">Next</span>\n                  </a>\n                </li>\n              );\n\n              return (\n                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                  <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                </li>\n              );\n\n            }) }\n\n          </ul>\n        </nav>\n      </Fragment>\n    );\n\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;",["78","79"],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/history.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/routes/Route.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/routes/index.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/SurahList.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/page/SurahPage.js",[],"/Users/moctarz/Desktop/devs/QURAN/guerrou.net-reactjs/quran-reactjs/src/components/page/QuranSlider.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"80","replacedBy":"86"},{"ruleId":"82","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":27,"nodeType":"92","messageId":"93","endLine":6,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":42,"column":13,"nodeType":"96","endLine":42,"endColumn":167},{"ruleId":"97","severity":1,"message":"98","line":164,"column":19,"nodeType":"96","endLine":164,"endColumn":105},{"ruleId":"97","severity":1,"message":"98","line":173,"column":19,"nodeType":"96","endLine":173,"endColumn":102},{"ruleId":"97","severity":1,"message":"98","line":182,"column":19,"nodeType":"96","endLine":182,"endColumn":88},{"ruleId":"80","replacedBy":"99"},{"ruleId":"82","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],["101"],["102"],["101"],["102"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["101"],["102"],"no-global-assign","no-unsafe-negation"]